[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "knowledge-pipeline"
version = "3.0.0"
description = "AI-powered knowledge pipeline for content ingestion and enrichment"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
authors = [
    {name = "Rivers Cornelson", email = "rivers.cornelson@crowe.com"}
]
keywords = [
    "knowledge-management",
    "ai",
    "openai",
    "gpt-4",
    "notion",
    "google-drive",
    "content-pipeline",
    "automation",
    "document-processing",
    "enrichment"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "notion-client>=2.0.0",
    "openai>=1.3.0",
    "google-api-python-client>=2.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-auth-oauthlib>=0.5.0",
    "pdfminer.six>=20221105",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.0",
    "tiktoken>=0.5.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "dataclasses-json>=0.6.0",
]

[project.urls]
Homepage = "https://riverscornelson.com/knowledge-pipeline"
Repository = "https://github.com/riverscornelson/knowledge-pipeline"
Issues = "https://github.com/riverscornelson/knowledge-pipeline/issues"
Documentation = "https://github.com/riverscornelson/knowledge-pipeline/tree/main/docs"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

secondary-sources = [
    "feedparser>=6.0.0",  # For RSS support
]

[project.scripts]
knowledge-pipeline = "scripts.run_pipeline:main"
kp-infer-metadata = "scripts.infer_metadata:main"
kp-migrate = "scripts.migrate_database:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=src --cov-report=term-missing"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/deprecated/*"]